@page "/student/quiz/question/{quizId:guid}"
@layout EmptyLayout

@inject ISimpleQuizService SimpleQuizService


<div class="container w-100 p-5" style="height: 100vh;">

    <div class="d-flex flex-column justify-content-between w-100 h-100">

        <div class="w-100">
            <div class="row rounded shadow-lg p-1">
                <p class="text-center m-2 w-100">@QuestionText</p>
            </div>

            <div class="d-flex justify-content-between my-5">
                <div class="rounded bg-warning">
                    <button class="btn btn-sm rounded shadow-sm">Предыдущий вопрос</button>
                </div>
                <div class="rounded bg-warning">
                    <button class="btn btn-sm rounded shadow-sm">Следубщий вопрос</button>
                </div>
            </div>
        </div>

        <div class="w-100">
            <div class="row my-4">
                <div class="offset-2 col-8">

                    <div class="row">
                        @foreach (var option in Options)
                        {
                            <div class="col-6">
                                <button class="btn w-100 rounded shadow p-2 m-2">
                                    @option.Value
                                </button>
                            </div>
                        }
                    </div>

                </div>
            </div>
        </div>

        <div class="w-100 d-flex justify-content-center">
            @for(int i = 1; i <= Quiz.Questions.Count; i++)
            {
                <button class="btn btn-sm btn-warning rounded text-center text-white mx-1" style="padding-top: 1px; padding-bottom: 1px;">
                    <span style="font-size: 0.8em;">@i</span>
                </button>
            }
        </div>

    </div>

</div>


@code {

    [Parameter] public Guid QuizId { get; set; }

    private SimpleQuizView Quiz { get; set; }
    private SimpleQuizView.Question Question => Quiz.Questions.First();
    private Dictionary<Guid, string> Options => Question.Options;

    private string QuestionText => Question.Text;


    protected override async Task OnInitializedAsync()
    {
        Quiz = await SimpleQuizService.GetBy(QuizId).ConfigureAwait(true);
    }

}
